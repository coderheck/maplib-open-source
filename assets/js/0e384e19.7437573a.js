"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},59881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:1},i="Basics of scripting in ROBLOX Studio and TRIA.os",s={unversionedId:"intro",id:"intro",title:"Basics of scripting in ROBLOX Studio and TRIA.os",description:"Welcome to the scripting documentation of TRIA.os!",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/maplib-open-source/docs/intro",draft:!1,editUrl:"https://github.com/coderheck/maplib-open-source/edit/master/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",next:{title:"EffectScript",permalink:"/maplib-open-source/docs/Tutorials/EffectScript"}},l={},c=[{value:"Booleans",id:"booleans",level:2},{value:"Strings",id:"strings",level:2},{value:"Tables",id:"tables",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basics-of-scripting-in-roblox-studio-and-triaos"},"Basics of scripting in ROBLOX Studio and TRIA.os"),(0,a.kt)("p",null,"Welcome to the scripting documentation of TRIA.os!",(0,a.kt)("br",null),"\nBy default we assume you have some knowledge of general scripting in ROBLOX Studio so the documents will sound a bit nerdy, but if you don't have the neccessary information, you can consult this page."),(0,a.kt)("h2",{id:"booleans"},"Booleans"),(0,a.kt)("p",null,"Boolean is an easy-to-understand data type which one has two values: ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". Think of it like a light switch, there are only two states a light bulb can be which is on or off.",(0,a.kt)("br",null),"\nIn ",(0,a.kt)("a",{parentName:"p",href:"https://create.roblox.com/docs/scripting/luau/control-structures#if-statements"},"conditional statements"),", if a boolean isn't ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"nil"),", Luau (the scripting language used for Studio) will assume the boolean as ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),".",(0,a.kt)("br",null)),(0,a.kt)("h2",{id:"strings"},"Strings"),(0,a.kt)("p",null,"String is a data type used to store text data, such as letters, numbers and symbols.",(0,a.kt)("br",null),"\nTo declare a string, type out anything you want and then wrap that thing in double quotes (",(0,a.kt)("inlineCode",{parentName:"p"},'"'),") or single quotes (",(0,a.kt)("inlineCode",{parentName:"p"},"'"),").",(0,a.kt)("br",null),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"Example:"),(0,a.kt)("br",null)),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'message = "Hello world!"\n')),(0,a.kt)("p",null,"Combining (or concatenating) strings is quite simple, add two periods (",(0,a.kt)("inlineCode",{parentName:"p"},".."),") between those strings. Concatenating strings won't insert a space between them so you'll have to put one yourself at the end of the first string and beginning of the next string or concatenate a space (",(0,a.kt)("inlineCode",{parentName:"p"},'" "'),") between the strings.",(0,a.kt)("br",null),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"Example:"),(0,a.kt)("br",null)),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'message1 = "Hello"\nmessage2 = "world!"\nmessage2WithSpaceAtTheBeginning = " world!"\nprint(message1 .. " " .. message2) -- Hello world!\nprint(message1 .. message2WithSpaceAtTheBeginning) -- Hello world!\nprint(message1 .. message2) -- Helloworld! (this is not a typo)\n')),(0,a.kt)("h2",{id:"tables"},"Tables"),(0,a.kt)("p",null,"Tables are used to store multiple types of data that isn't ",(0,a.kt)("inlineCode",{parentName:"p"},"nil")," (which is nothing) such as booleans, numbers, strings, functions,...",(0,a.kt)("br",null),"\nYou can declare a table by curly braces (",(0,a.kt)("inlineCode",{parentName:"p"},"{}"),").\n",(0,a.kt)("inlineCode",{parentName:"p"},"Example:"),(0,a.kt)("br",null)),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"table1 = {} -- creates an empty table\nprint(table1) -- {}\n")),(0,a.kt)("p",null,"Tables can be used as arrays or dictionaries. Arrays use numbered lists for indexing data; dictionaries can have numbers, strings, objects as indices."))}d.isMDXComponent=!0}}]);